services:
  argo_bridge:
    build:
      context: ..
      dockerfile: ./dockerfile
    ports:
      - "443:443"
    restart: unless-stopped
    volumes:
      - metrics_data:/app/metrics
    environment:
      - METRICS_TOKEN=${METRICS_TOKEN:-default_secret_token}
      - PROMETHEUS_MULTIPROC_DIR=/app/metrics

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml.template:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "127.0.0.1:9090:9090"
    restart: unless-stopped
    environment:
      - METRICS_TOKEN=${METRICS_TOKEN:-default_secret_token}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    depends_on:
      - argo_bridge

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "127.0.0.1:3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password  
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:
  metrics_data:
